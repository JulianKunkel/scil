// This file is part of SCIL.
//
// SCIL is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// SCIL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with SCIL.  If not, see <http://www.gnu.org/licenses/>.

#include <fpzip.h>

#include <algo/algo-fpzip.h>
#include <algo/algo-fpzip-helperr.c.x>


#pragma GCC diagnostic ignored "-Wunused-parameter"
int scil_fpzip_compress_<DATATYPE>(const scil_context* ctx,
                        byte * restrict dest,
                        uint64_t* restrict dest_size,
                        const <DATATYPE>*restrict source,
                        const uint64_t source_count)
{
    FPZ* fpz = fpzip_write_to_buffer(dest, *dest_size);
    fpz->type = SCIL_TYPE_<DATATYPE>; // in fpzip float is 0 and double 1
    fpz->prec = 0; // lossless
    fpz->nx = source_count; // one-dimensional
    fpz->ny = 1; //
    fpz->nz = 1; //
    fpz->nf = 1; //

    int ret = compress(fpz, (void*)source);

    fpzip_write_close(fpz);

    return ret;
}

#pragma GCC diagnostic ignored "-Wunused-parameter"
int scil_fpzip_decompress_<DATATYPE>(  const scil_context* ctx,
                            <DATATYPE>*restrict dest,
                            uint64_t exp_count,
                            const byte*restrict source,
                            const uint64_t source_size)
{
    FPZ* fpz = fpzip_read_from_buffer(dest);

    int ret = decompress(fpz, (void*)source, source_size);

    fpzip_read_close(fpz);

    return ret;
}
